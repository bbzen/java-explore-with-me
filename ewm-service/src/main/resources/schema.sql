create TABLE IF NOT EXISTS users (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(254) NOT NULL,
name VARCHAR(250) NOT NULL,
CONSTRAINT unq_email UNIQUE(email)
);

create TABLE IF NOT EXISTS categories (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(50) NOT NULL,
CONSTRAINT unq_name UNIQUE(name)
);

create TABLE IF NOT EXISTS locations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
lat float NOT NULL,
lon float NOT NULL
);

create TABLE IF NOT EXISTS events (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
annotation VARCHAR(2000) NOT NULL,
category BIGINT,
confirmed_requests BIGINT,
created_on TIMESTAMP WITHOUT TIME ZONE,
description VARCHAR(7000) NOT NULL,
event_date TIMESTAMP WITHOUT TIME ZONE,
initiator BIGINT,
location BIGINT,
paid Boolean DEFAULT FALSE,
participant_limit int DEFAULT 0,
published_on timestamp WITHOUT TIME ZONE,
request_moderation Boolean DEFAULT TRUE,
state varchar(31) NOT NULL,
title varchar(120) NOT NULL,
views BIGINT,
CONSTRAINT fk_category FOREIGN KEY(category) REFERENCES categories(id),
CONSTRAINT fk_initiator FOREIGN KEY(initiator) REFERENCES users(id) ON update RESTRICT ON delete CASCADE,
CONSTRAINT fk_location FOREIGN KEY(location) REFERENCES locations(id) ON update RESTRICT ON delete CASCADE
);

create TABLE IF NOT EXISTS requests (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
created timestamp WITHOUT TIME ZONE,
event BIGINT REFERENCES events(id),
requester BIGINT REFERENCES users(id),
status varchar(31) NOT NULL,
CONSTRAINT unw_user_request UNIQUE(event, requester)
);

create TABLE IF NOT EXISTS compilations (
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title varchar(50) NOT NULL,
pinned boolean NOT NULL
);

create TABLE IF NOT EXISTS compilations_events (
compilation_id BIGINT REFERENCES compilations(id),
event_id BIGINT REFERENCES events(id),
PRIMARY KEY (compilation_id, event_id)
);

create TABLE IF NOT EXISTS comments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author BIGINT NOT NULL,
    event BIGINT NOT NULL,
    text VARCHAR(1000) NOT NULL,
    timestamp TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT fk_comments_user FOREIGN KEY (author) REFERENCES users(id),
    CONSTRAINT fk_comments_events FOREIGN KEY (event) REFERENCES events(id),
    CONSTRAINT timestamp_timezone CHECK (timestamp IS NOT NULL)
);